/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.39
 * Generated at: 2013-04-30 13:53:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javaclasses.HomePage;

public final class weekcalendar_005ffull_005fdemo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("\t<link rel='stylesheet' type='text/css' href='css/reset.css' />\n");
      out.write("    <link rel='stylesheet' type='text/css' href='libs/css/smoothness/jquery-ui-1.8rc3.custom.css' />\n");
      out.write("\t<link rel='stylesheet' type='text/css' href='css/jquery.weekcalendar.css' />\n");
      out.write("\t<link rel='stylesheet' type='text/css' href='css/demo.css' />\n");
      out.write("\n");
      out.write("\t<script type='text/javascript' src='http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js'></script>\n");
      out.write("\t<script type='text/javascript' src='libs/jquery-ui-1.8rc3.custom.min.js'></script>\n");
      out.write("\t<script type='text/javascript' src='scripts/jquery.weekcalendar.js'></script>\n");
      out.write("\t<script type='text/javascript' src='scripts/demo.js'></script>\n");
      out.write("</head>\n");
 
      out.write("\n");
      out.write("<body>\n");
      out.write("\t<div id=\"header\">\n");
      out.write("\t\t<table class=\"table\">\n");
      out.write("\t\t\t<tr><td>\n");
      out.write("\t\t\t\t<a href=login.jsp><img src=\"images/nossaq.png\" alt=\"HomePage\" class=\"center\"></a>\n");
      out.write("\t\t\t</td></tr>\n");
      out.write("\t\t</table>\n");
      out.write("\t</div>\n");
      out.write("\t<div id=\"about_button_container\">\n");
      out.write("\t\t<button type=\"button\" id=\"about_button\">About this demo</button>\n");
      out.write("\t</div>\n");
      out.write("\t<div id='ovunc' style=\"float:left; margin-top: 15px; width:20%;background-color:gray;\">Account Info</div>\n");
      out.write(" \t<div id='calendar' style=\"float:right; margin-top: 15px; width:80%;background-color:gray;\"></div>\n");
      out.write("\n");
      out.write("\t<div id=\"event_edit_container\">\n");
      out.write("\t\t<form>\n");
      out.write("\t\t\t<input type=\"hidden\" />\n");
      out.write("\t\t\t<ul>\n");
      out.write("\t\t\t\t<li>\n");
      out.write("\t\t\t\t\t<span>Date: </span><span class=\"date_holder\"></span> \n");
      out.write("\t\t\t\t</li>\n");
      out.write("\t\t\t\t<li>\n");
      out.write("\t\t\t\t\t<label for=\"start\">Start Time: </label><select name=\"start\"><option value=\"\">Select Start Time</option></select>\n");
      out.write("\t\t\t\t</li>\n");
      out.write("\t\t\t\t<li>\n");
      out.write("\t\t\t\t\t<label for=\"end\">End Time: </label><select name=\"end\"><option value=\"\">Select End Time</option></select>\n");
      out.write("\t\t\t\t</li>\n");
      out.write("\t\t\t\t<li>\n");
      out.write("\t\t\t\t\t<label for=\"title\">Title: </label><input type=\"text\" name=\"title\" />\n");
      out.write("\t\t\t\t</li>\n");
      out.write("\t\t\t\t<li>\n");
      out.write("\t\t\t\t\t<label for=\"body\">Body: </label><textarea name=\"body\"></textarea>\n");
      out.write("\t\t\t\t</li>\n");
      out.write("\t\t\t</ul>\n");
      out.write("\t\t</form>\n");
      out.write("\t</div>\n");
      out.write("\t<div id=\"about\">\n");
      out.write("\t\t<h2>Summary</h2>\n");
      out.write("\t\t<p>\n");
      out.write("\t\t\tThis calendar implementation demonstrates further usage of the calendar with editing and deleting of events. \n");
      out.write("\t\t\tIt stops short however of implementing a server-side back-end which is out of the scope of this plugin. It \n");
      out.write("\t\t\tshould be reasonably evident by viewing the demo source code, where the points for adding ajax should be. \n");
      out.write("\t\t\tNote also that this is **just a demo** and some of the demo code itself is rough. It could certainly be \n");
      out.write("\t\t\toptimised.\n");
      out.write("\t\t</p>\n");
      out.write("\t\t<p>\n");
      out.write("\t\t\t***Note: This demo is straight out of SVN trunk so may show unreleased features from time to time.\n");
      out.write("\t\t</p>\n");
      out.write("\t\t<h2>Demonstrated Features</h2>\n");
      out.write("\t\t<p>\n");
      out.write("\t\t\tThis calendar implementation demonstrates the following features:\n");
      out.write("\t\t</p>\n");
      out.write("\t\t<ul class=\"formatted\">\n");
      out.write("\t\t\t<li>Adding, updating and deleting of calendar events using jquery-ui dialog. Also includes \n");
      out.write("\t\t\t\tadditional calEvent data (body field) not defined by the calEvent data structure to show the storage \n");
      out.write("\t\t\t\tof the data within the calEvent</li>\n");
      out.write("\t\t\t<li>Dragging and resizing of calendar events</li>\n");
      out.write("\t\t\t<li>Restricted timeslot rendering based on business hours</li>\n");
      out.write("\t\t\t<li>Week starts on Monday instead of the default of Sunday</li>\n");
      out.write("\t\t\t<li>Allowing calEvent overlap with staggered rendering of overlapping events</li>\n");
      out.write("\t\t\t<li>Use of the 'getTimeslotTimes' method to retrieve valid times for a given event day. This is used to populate\n");
      out.write("\t\t\t\tselect fields for adding, updating events.</li>\n");
      out.write("\t\t\t<li>Use of the 'eventRender' callback to add a different css class to calEvents in the past</li>\n");
      out.write("\t\t\t<li>Use of additional calEvent data to enforce read only behaviour for a calendar event. See the event\n");
      out.write("\t\t\t\ttitled \"i'm read-only\"</li>\n");
      out.write("\t\t</ul>\n");
      out.write("\t</div>\t\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
