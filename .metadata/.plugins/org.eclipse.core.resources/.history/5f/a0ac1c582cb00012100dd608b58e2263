import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.net.Socket;


public class DownloaderThread extends Thread{

	//Variables
	static PrintWriter fileWriter;
	static int allowedID = 1;
	private int threadID;
	private String host;
	private String path;
	private int lower;
	private int higher;
	
	public DownloaderThread(int threadID, String host, String path, String fileName, int lower, int higher){
		this.threadID = threadID; 
		this.host = host;
		this.path = path;
		this.lower = lower;
		this.higher = higher;
		
		if(fileWriter == null){
			try {
				fileWriter = new PrintWriter(fileName, "UTF-8");
			} catch (FileNotFoundException e) {
				e.printStackTrace();
			} catch (UnsupportedEncodingException e) {
				e.printStackTrace();
			}
		}
	}
	
	@Override
	public void run() {
		try {
			String message;
			Socket sock = new Socket(host, 80);
			
			BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(sock.getOutputStream()));
		
			writer.write("GET " + path + " HTTP/1.1\r\n" +
						 "Host: " + host + "\r\n" +
						 "Range: bytes=" + lower +"-"+ higher +"\r\n"	+
						"\r\n");
			writer.flush();
			
			BufferedReader reader = new BufferedReader(new InputStreamReader (sock.getInputStream()));
			LargeFileDonwloader.endTime = System.currentTimeMillis();
			boolean isContent = false;
	
			while((message = reader.readLine()) != null){ 
				
				if(!isContent){	
					System.out.println("Thread " + threadID + ": " +message);
				
					if(message.contains("Content-Type:")){
						isContent = true;
					}
				}
				else{
					if(!message.equals("")){
						
						while (!writeFile(message));	
					}
				}	
			}
		    allowedID++;
			reader.close();
			sock.close();
			
		}catch(IOException e){
			e.printStackTrace();
		}
	}
	
	protected synchronized boolean writeFile(String message){
		if(allowedID == threadID){
			fileWriter.print(message);
			return true;
		}
		else
			return false;
	}
		
}
